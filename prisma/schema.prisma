generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  @@map(name:"user")
  id       Int    @id @default(autoincrement())
  username String @unique @db.VarChar(100)
  password String @db.VarChar(255)
  email String @db.VarChar(50)
  firstname String @db.VarChar(50)
  lastname String @db.VarChar(50)
  telephone Int?
  status Int @db.SmallInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  addresses Address[]
  payments UserPayment[]
  shopping_session ShoppingSession?
  order_details OrderDetails[]
  rating UserRating[]
}

model Address {
  @@map(name:"address")
  id Int @id @default(autoincrement())
  addressLine String @db.VarChar(100)
  city String @db.VarChar(100)
  postalCode String @db.VarChar(30)
  country String @db.VarChar(50)
  phone Int? 
  user User? @relation(fields: [user_id], references:[id])
  user_id Int?
  
}

model UserPayment {
  @@map(name:"userPayment")
  id Int @id @default(autoincrement())
  payment_type String @db.VarChar(50)
  provider String @db.VarChar(50)
  account_no Int
  expiry DateTime
  user User @relation(fields: [user_id],references:[id])
  user_id Int
}

model ArticleCategory {
  @@map(name:"articleCategory")
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  desc String @db.VarChar(255)
  goalCategory String? @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articles Article[]
}

model ArticleInventory {
  @@map(name:"articleInventory")
  id Int @id @default(autoincrement())
  quantity Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articles Article[]
}

model Discount {
  @@map(name:"discount")
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  desc String @db.VarChar(255)
  discount_percent Decimal
  active Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articles Article[]
}


model Article {
  @@map(name:"article")
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  desc String? @db.VarChar(255)
  img String? @db.VarChar(255)
  price Decimal 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  category ArticleCategory @relation(fields:[category_id],references:[id])
  category_id Int
  inventory ArticleInventory @relation(fields:[inventory_id],references:[id])
  inventory_id Int
  discount Discount? @relation(fields:[discount_id],references:[id])
  discount_id Int?
  cart_item CartItem?
  order_items OrderItems[]
  rating UserRating[]
}

model ShoppingSession {
  @@map(name:"shoppingSession")
  id Int @id @default(autoincrement())
  total Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields:[user_id],references:[id])
  user_id Int
  cart_item CartItem?
}

model CartItem {
  @@map(name:"cartItem")
  id Int @id @default(autoincrement())
  quantity Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shopping_session ShoppingSession @relation(fields:[session_id],references:[id])
  session_id Int
  article Article @relation(fields: [article_id],references:[id])
  article_id Int
}

model PaymentDetails {
  @@map(name:"paymentDetails")
  id Int @id @default(autoincrement())
  amount Int
  provider String @db.VarChar(255)
  status String @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order_details OrderDetails?
}

model OrderDetails {
  @@map(name:"orderDetails")
  id Int @id @default(autoincrement())
  total Decimal 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [user_id],references:[id])
  user_id Int
  payment_details PaymentDetails @relation(fields: [payment_id],references:[id])
  payment_id Int
  order_items OrderItems[]
}


model OrderItems {
  @@map(name:"orderItems")
  id Int @id @default(autoincrement())
  quantity Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order_details OrderDetails @relation(fields: [order_id],references:[id])
  order_id Int
  article Article @relation(fields: [article_id],references:[id])
  article_id Int
}

model UserRating {
  @@map (name:"userRating")
  id Int @id @default(autoincrement())
  rating Int
  review String? @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [user_id],references:[id])
  user_id Int
  article Article @relation(fields: [article_id],references:[id])
  article_id Int

}